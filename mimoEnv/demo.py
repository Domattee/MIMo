import gym
import time
import numpy as np
import mimoEnv

env = gym.make("MIMoDemo-v0")

max_steps = 100 
poses = [
    {'name':'wave1', 'duration':2, 'qpos':np.array([0, 0, 0.33, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.313826, 0.9572, -1.68454, -1.13813, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])},
    {'name':'wave2', 'duration':30, 'qpos':np.array([0, 0, 0.33, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.313826, 0.9572, -1.68454, -2.41624, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])},
    {'name':'wave1', 'duration':30, 'qpos':np.array([0, 0, 0.33, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.313826, 0.9572, -1.68454, -1.13813, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])},
    {'name':'wave2', 'duration':30, 'qpos':np.array([0, 0, 0.33, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.313826, 0.9572, -1.68454, -2.41624, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])},
    {'name':'wave1', 'duration':30, 'qpos':np.array([0, 0, 0.33, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.313826, 0.9572, -1.68454, -1.13813, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])},
    {'name':'reach', 'duration':50,'qpos':np.array([0, 0, 0.33, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.54236, 0.47822, 0, 0, 0, 0, 0, 0.695981, 0.9106, -0.45332, -0.795545, 0.28278, 0.708715, 0.229634, -1.37069, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])},
    {'name':'reach', 'duration':20,'qpos':np.array([0, 0, 0.33, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.54236, 0.47822, 0, 0, 0, 0, 0, 0.695981, 0.9106, -0.45332, -0.795545, 0.28278, 0.708715, 0.229634, -1.37069, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])},
    {'name':'airplane','duration':100, 'qpos':np.array([0, 0, 0.33, 1, 0, 0, 0, 0.2443, 0, 0.5323, 0.089528, 0, 0.5323, 0, -0.93204, -0.19552, 0, 0, 0, 0, -0.195715, 1.6096, -0.380895, 0, 0, 0, 0, 0, 0.27561, 0.7708, -0.004285, 0, -0.64411, 0, 0, 0, 0, 0, 0, 0.00478975, 0, 0, 0, 0, 0.3491, -0.142416, 0.0849205, -1.45166, 0, 0, 0, 0])},
    {'name':'airplane','duration':30, 'qpos':np.array([0, 0, 0.33, 1, 0, 0, 0, 0.2443, 0, 0.5323, 0.089528, 0, 0.5323, 0, -0.93204, -0.19552, 0, 0, 0, 0, -0.195715, 1.6096, -0.380895, 0, 0, 0, 0, 0, 0.27561, 0.7708, -0.004285, 0, -0.64411, 0, 0, 0, 0, 0, 0, 0.00478975, 0, 0, 0, 0, 0.3491, -0.142416, 0.0849205, -1.45166, 0, 0, 0, 0])},
    {'name':'backstretch','duration':100,'qpos':np.array([0, 0, 0.33, 1, 0, 0, 0, 0, 0, -0.259395, 0, 0, 0, 0, -1.07702, 0, 0, 0, 0, 0, -0.208453, 2.495, -1.65557, 0.08727, 0, 0, 0, 0, -0.208453, 2.4717, -1.65557, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])},
    {'name':'backstretch','duration':20,'qpos':np.array([0, 0, 0.33, 1, 0, 0, 0, 0, 0, -0.259395, 0, 0, 0, 0, -1.07702, 0, 0, 0, 0, 0, -0.208453, 2.495, -1.65557, 0.08727, 0, 0, 0, 0, -0.208453, 2.4717, -1.65557, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])},
    {'name':'cross','duration':100, 'qpos':np.array([0, 0, 0.33, 1, 0, 0, 0, -0.2443, 0.3142, 0.5323, -0.4712, -0.3142, 0.5323, -0.17433, -0.57618, 0.21996, 0, 0, 0, 0, -0.4887, 1.7494, -1.728, 0, 0, 0, 0, -0.388268, 0.861581, 1.1902, -0.757505, 0, 0, 0, 0, 0, -1.50662, -0.8901, -0.201752, 0, -1.1, -0.481046, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])},
    {'name':'cross','duration':20, 'qpos':np.array([0, 0, 0.33, 1, 0, 0, 0, -0.2443, 0.3142, 0.5323, -0.4712, -0.3142, 0.5323, -0.17433, -0.57618, 0.21996, 0, 0, 0, 0, -0.4887, 1.7494, -1.728, 0, 0, 0, 0, -0.388268, 0.861581, 1.1902, -0.757505, 0, 0, 0, 0, 0, -1.50662, -0.8901, -0.201752, 0, -1.1, -0.481046, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])},
]

obs = env.reset()

old_pose = env.sim.data.qpos
for pose in poses:
    
    new_pose = pose['qpos']
    timesteps = pose['duration']
    for step in range(timesteps):
        _,_,_,_ = env.step(np.zeros(env.action_space.shape))
        env.sim.data.qpos[:] = old_pose + (new_pose-old_pose) * step/(timesteps-1)
        env.render()
    old_pose = new_pose

env.close()